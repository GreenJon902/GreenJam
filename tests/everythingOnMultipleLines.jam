/**
 * This is a test of every type of token and parse shape that can be achieved, it also serves as a test for parsing
 * multiple lines, and comments in use at the end of lines. This should be updated with new features as they are added!
 */

// Variable Declaration
int foo;
int bar = 5;
int baz;
String BAZ;
int FOO, BAR;

// Commands
:: WRITE STD_OUT, "I should be printed in console";
:: ADD 4, 3;
foo = :: ADD 5, 7;
:: ADD 5, 7, bar;  // Stores result in bar
FOO = :: ADD 5, 7, BAR;

// Expression stuff
baz = 5;
baz = baz + 4 * 3;
BAZ = (8 / baz * 6 / (2 + 4) * 3 - 8).toString() + "8";
baz = BAZ.toInt(16);

// Functions
int function() {
    return 5;
}; // Test if it works with the optional line end at end of a code block

int add(int a, int b) {
    return a + b;
}

int result;
void double(int amount) {
    result = amount * 2;
    return; // Test returning with no value
}

int result2;
void triple(int amount) {
    result2 = amount * 3;
    // Test no return whatsoever
}

double(add(function, 4));
triple(add(function, 5));
